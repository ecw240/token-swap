{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7","program":"/Users/loan/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","roots","/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=2c1d6d39491fb8d6","-C","extra-filename=-2c1d6d39491fb8d6","--out-dir","/Users/loan/solana-program-library/token-swap/program/target/rls/debug/deps","-L","dependency=/Users/loan/solana-program-library/token-swap/program/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/loan/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/loan/solana-program-library/token-swap/program/target/rls/debug/deps/libroots-2c1d6d39491fb8d6.rmeta"},"prelude":{"crate_id":{"name":"roots","disambiguator":[866268318362652531,18152994003282600210]},"crate_root":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src","external_crates":[{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}}],"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1391,"byte_end":4337,"line_start":26,"line_end":98,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3056,"byte_end":3065,"line_start":73,"line_end":73,"column_start":22,"column_end":31},"alias_span":null,"name":"FloatType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3107,"byte_end":3129,"line_start":75,"line_end":75,"column_start":40,"column_end":62},"alias_span":null,"name":"find_roots_biquadratic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3164,"byte_end":3180,"line_start":76,"line_end":76,"column_start":34,"column_end":50},"alias_span":null,"name":"find_roots_cubic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3225,"byte_end":3251,"line_start":77,"line_end":77,"column_start":44,"column_end":70},"alias_span":null,"name":"find_roots_cubic_depressed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3297,"byte_end":3324,"line_start":78,"line_end":78,"column_start":45,"column_end":72},"alias_span":null,"name":"find_roots_cubic_normalized","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3360,"byte_end":3377,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"alias_span":null,"name":"find_roots_linear","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3416,"byte_end":3436,"line_start":80,"line_end":80,"column_start":38,"column_end":58},"alias_span":null,"name":"find_roots_quadratic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3473,"byte_end":3491,"line_start":81,"line_end":81,"column_start":36,"column_end":54},"alias_span":null,"name":"find_roots_quartic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3538,"byte_end":3566,"line_start":82,"line_end":82,"column_start":46,"column_end":74},"alias_span":null,"name":"find_roots_quartic_depressed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3601,"byte_end":3606,"line_start":83,"line_end":83,"column_start":34,"column_end":39},"alias_span":null,"name":"Roots","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":199},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3641,"byte_end":3656,"line_start":85,"line_end":85,"column_start":33,"column_end":48},"alias_span":null,"name":"find_root_brent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3702,"byte_end":3718,"line_start":86,"line_end":86,"column_start":45,"column_end":61},"alias_span":null,"name":"DebugConvergency","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3752,"byte_end":3768,"line_start":87,"line_end":87,"column_start":33,"column_end":49},"alias_span":null,"name":"find_roots_eigen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3814,"byte_end":3841,"line_start":88,"line_end":88,"column_start":45,"column_end":72},"alias_span":null,"name":"find_root_inverse_quadratic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3887,"byte_end":3895,"line_start":89,"line_end":89,"column_start":45,"column_end":53},"alias_span":null,"name":"Parabola","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3938,"byte_end":3962,"line_start":90,"line_end":90,"column_start":42,"column_end":66},"alias_span":null,"name":"find_root_newton_raphson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":3998,"byte_end":4014,"line_start":91,"line_end":91,"column_start":35,"column_end":51},"alias_span":null,"name":"find_roots_sturm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":4055,"byte_end":4077,"line_start":92,"line_end":92,"column_start":40,"column_end":62},"alias_span":null,"name":"find_root_regula_falsi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":4112,"byte_end":4128,"line_start":93,"line_end":93,"column_start":34,"column_end":50},"alias_span":null,"name":"find_root_secant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":4175,"byte_end":4192,"line_start":94,"line_end":94,"column_start":46,"column_end":63},"alias_span":null,"name":"SimpleConvergency","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":4219,"byte_end":4230,"line_start":95,"line_end":95,"column_start":26,"column_end":37},"alias_span":null,"name":"Convergency","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":4257,"byte_end":4265,"line_start":96,"line_end":96,"column_start":26,"column_end":34},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":4292,"byte_end":4298,"line_start":97,"line_end":97,"column_start":26,"column_end":32},"alias_span":null,"name":"Sample","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":4325,"byte_end":4336,"line_start":98,"line_end":98,"column_start":26,"column_end":37},"alias_span":null,"name":"SearchError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1391,"byte_end":4337,"line_start":26,"line_end":98,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":89},{"krate":0,"index":154},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490}],"decl_id":null,"docs":" A set of functions to find real roots of numerical equations.","sig":null,"attributes":[{"value":"crate_type = \"lib\"","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1391,"byte_end":1413,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ A set of functions to find real roots of numerical equations.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1415,"byte_end":1480,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1481,"byte_end":1484,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This crate contains various algorithms for numerical and analytical solving","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1485,"byte_end":1564,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ of 1-variable equations like f(x)=0. Only real roots are calculated.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1565,"byte_end":1637,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ Multiple (double etc.) roots are considered as one root.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1638,"byte_end":1698,"line_start":32,"line_end":32,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1699,"byte_end":1702,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Use","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1703,"byte_end":1712,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1713,"byte_end":1716,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Functions find_root_* try to find a root of any given closure function by","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1717,"byte_end":1794,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ iterative approximations. Conditions for success/failure can be customized","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1795,"byte_end":1873,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ by implementing the Convergency trait.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1874,"byte_end":1916,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/ Functions find_roots_* return all roots of several simple equations at once.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/lib.rs","byte_start":1917,"byte_end":1997,"line_start":39,"line_end":39,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7910,"byte_end":7932,"line_start":46,"line_end":46,"column_start":8,"column_end":30},"name":"find_roots_biquadratic","qualname":"::analytical::biquadratic::find_roots_biquadratic","value":"pub fn find_roots_biquadratic<F: FloatType>(F, F, F) -> Roots<F>","parent":null,"children":[],"decl_id":null,"docs":" Solves a bi-quadratic equation a4*x^4 + a2*x^2 + a0 = 0.","sig":null,"attributes":[{"value":"/ Solves a bi-quadratic equation a4*x^4 + a2*x^2 + a0 = 0.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7308,"byte_end":7368,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7369,"byte_end":7372,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Returned roots are arranged in the increasing order.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7373,"byte_end":7429,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7430,"byte_end":7433,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7434,"byte_end":7448,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7449,"byte_end":7452,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7453,"byte_end":7460,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use roots::find_roots_biquadratic;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7461,"byte_end":7499,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7500,"byte_end":7503,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let no_roots = find_roots_biquadratic(1f32, 0f32, 1f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7504,"byte_end":7564,"line_start":37,"line_end":37,"column_start":1,"column_end":61}},{"value":"/ // Returns Roots::No([]) as 'x^4 + 1 = 0' has no roots","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7565,"byte_end":7623,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7624,"byte_end":7627,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let one_root = find_roots_biquadratic(1f64, 0f64, 0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7628,"byte_end":7688,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"/ // Returns Roots::One([0f64]) as 'x^4 = 0' has one root 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7689,"byte_end":7750,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7751,"byte_end":7754,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let two_roots = find_roots_biquadratic(1f32, 0f32, -1f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7755,"byte_end":7817,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/ // Returns Roots::Two([-1f32, 1f32]) as 'x^4 - 1 = 0' has roots -1 and 1","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7818,"byte_end":7894,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/biquadratic.rs","byte_start":7895,"byte_end":7902,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":12053,"byte_end":12069,"line_start":59,"line_end":59,"column_start":8,"column_end":24},"name":"find_roots_cubic","qualname":"::analytical::cubic::find_roots_cubic","value":"pub fn find_roots_cubic<F: FloatType>(F, F, F, F) -> Roots<F>","parent":null,"children":[],"decl_id":null,"docs":" Solves a cubic equation a3*x^3 + a2*x^2 + a1*x + a0 = 0.","sig":null,"attributes":[{"value":"/ Solves a cubic equation a3*x^3 + a2*x^2 + a1*x + a0 = 0.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":10792,"byte_end":10852,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":10853,"byte_end":10856,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ General formula (complex numbers) is implemented for three roots.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":10857,"byte_end":10926,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":10927,"byte_end":10930,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that very small values of a3 (comparing to other coefficients) will cause the loss of precision.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":10931,"byte_end":11036,"line_start":32,"line_end":32,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11037,"byte_end":11040,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ In case more than one roots are present, they are returned in the increasing order.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11041,"byte_end":11128,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11129,"byte_end":11132,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11133,"byte_end":11147,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11148,"byte_end":11151,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11152,"byte_end":11159,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use roots::Roots;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11160,"byte_end":11181,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/ use roots::find_roots_cubic;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11182,"byte_end":11214,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11215,"byte_end":11218,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let no_roots = find_roots_cubic(0f32, 1f32, 0f32, 1f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11219,"byte_end":11279,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ // Returns Roots::No([]) as 'x^2 + 1 = 0' has no roots","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11280,"byte_end":11338,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11339,"byte_end":11342,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let one_root = find_roots_cubic(1f64, 0f64, 0f64, 0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11343,"byte_end":11403,"line_start":45,"line_end":45,"column_start":1,"column_end":61}},{"value":"/ // Returns Roots::One([0f64]) as 'x^3 = 0' has one root 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11404,"byte_end":11465,"line_start":46,"line_end":46,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11466,"byte_end":11469,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let three_roots = find_roots_cubic(1f32, 0f32, -1f32, 0f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11470,"byte_end":11534,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/ // Returns Roots::Three([-1f32, 0f32, 1f32]) as 'x^3 - x = 0' has roots -1, 0, and 1","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11535,"byte_end":11623,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11624,"byte_end":11627,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let three_roots_less_precision = find_roots_cubic(","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11628,"byte_end":11682,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/            -0.000000000000000040410628481035f64,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11683,"byte_end":11735,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/            0.0126298310280606f64,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11736,"byte_end":11773,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/            -0.100896606408756f64,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11774,"byte_end":11811,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/            0.0689539597036461f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11812,"byte_end":11850,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ // Returns Roots::Three([0.7583841816097057f64, 7.233267996296344f64, 312537357195212.9f64])","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11851,"byte_end":11947,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ // while online math expects 0.7547108770537f64, 7.23404258961f64, 312537357195213f64","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":11948,"byte_end":12037,"line_start":57,"line_end":57,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic.rs","byte_start":12038,"byte_end":12045,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":18331,"byte_end":18357,"line_start":43,"line_end":43,"column_start":8,"column_end":34},"name":"find_roots_cubic_depressed","qualname":"::analytical::cubic_depressed::find_roots_cubic_depressed","value":"pub fn find_roots_cubic_depressed<F: FloatType>(F, F) -> Roots<F>","parent":null,"children":[],"decl_id":null,"docs":" Solves a depressed cubic equation x^3 + a1*x + a0 = 0.","sig":null,"attributes":[{"value":"/ Solves a depressed cubic equation x^3 + a1*x + a0 = 0.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":17809,"byte_end":17867,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":17868,"byte_end":17871,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In case more than one roots are present, they are returned in the increasing order.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":17872,"byte_end":17959,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":17960,"byte_end":17963,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":17964,"byte_end":17978,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":17979,"byte_end":17982,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":17983,"byte_end":17990,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use roots::find_roots_cubic_depressed;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":17991,"byte_end":18033,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":18034,"byte_end":18037,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let one_root = find_roots_cubic_depressed(0f64, 0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":18038,"byte_end":18096,"line_start":37,"line_end":37,"column_start":1,"column_end":59}},{"value":"/ // Returns Roots::One([0f64]) as 'x^3 = 0' has one root 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":18097,"byte_end":18158,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":18159,"byte_end":18162,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let three_roots = find_roots_cubic_depressed(-1f32, 0f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":18163,"byte_end":18225,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ // Returns Roots::Three([-1f32, -0f32, 1f32]) as 'x^3 - x = 0' has roots -1, 0, and 1","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":18226,"byte_end":18315,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_depressed.rs","byte_start":18316,"byte_end":18323,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22772,"byte_end":22799,"line_start":45,"line_end":45,"column_start":8,"column_end":35},"name":"find_roots_cubic_normalized","qualname":"::analytical::cubic_normalized::find_roots_cubic_normalized","value":"pub fn find_roots_cubic_normalized<F: FloatType>(F, F, F) -> Roots<F>","parent":null,"children":[],"decl_id":null,"docs":" Solves a normalized cubic equation x^3 + a2*x^2 + a1*x + a0 = 0.","sig":null,"attributes":[{"value":"/ Solves a normalized cubic equation x^3 + a2*x^2 + a1*x + a0 = 0.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22149,"byte_end":22217,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22218,"byte_end":22221,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Trigonometric solution (arccos/cos) is implemented for three roots.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22222,"byte_end":22293,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22294,"byte_end":22297,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ In case more than one roots are present, they are returned in the increasing order.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22298,"byte_end":22385,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22386,"byte_end":22389,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22390,"byte_end":22404,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22405,"byte_end":22408,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22409,"byte_end":22416,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use roots::find_roots_cubic_normalized;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22417,"byte_end":22460,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22461,"byte_end":22464,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let one_root = find_roots_cubic_normalized(0f64, 0f64, 0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22465,"byte_end":22530,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/ // Returns Roots::One([0f64]) as 'x^3 = 0' has one root 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22531,"byte_end":22592,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22593,"byte_end":22596,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let three_roots = find_roots_cubic_normalized(0f32, -1f32, 0f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22597,"byte_end":22666,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ // Returns Roots::Three([-1f32, -0f32, 1f32]) as 'x^3 - x = 0' has roots -1, 0, and 1","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22667,"byte_end":22756,"line_start":43,"line_end":43,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/cubic_normalized.rs","byte_start":22757,"byte_end":22764,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28865,"byte_end":28882,"line_start":48,"line_end":48,"column_start":8,"column_end":25},"name":"find_roots_linear","qualname":"::analytical::linear::find_roots_linear","value":"pub fn find_roots_linear<F: FloatType>(F, F) -> Roots<F>","parent":null,"children":[],"decl_id":null,"docs":" Solves a linear equation a1*x + a0 = 0.","sig":null,"attributes":[{"value":"/ Solves a linear equation a1*x + a0 = 0.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28234,"byte_end":28277,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28278,"byte_end":28281,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28282,"byte_end":28296,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28297,"byte_end":28300,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28301,"byte_end":28308,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use roots::Roots;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28309,"byte_end":28330,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ use roots::find_roots_linear;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28331,"byte_end":28364,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28365,"byte_end":28368,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Returns Roots::No([]) as '0*x + 1 = 0' has no roots;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28369,"byte_end":28428,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/ let no_root = find_roots_linear(0f32, 1f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28429,"byte_end":28477,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(no_root, Roots::No([]));","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28478,"byte_end":28517,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28518,"byte_end":28521,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Returns Roots::Two([0f64]) as '1*x + 0 = 0' has the root 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28522,"byte_end":28587,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ let root = find_roots_linear(1f64, 0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28588,"byte_end":28633,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(root, Roots::One([0f64]));","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28634,"byte_end":28675,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28676,"byte_end":28679,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Returns Roots::One([0f32]) as 0 is one of roots of '0*x + 0 = 0'","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28680,"byte_end":28751,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/ let zero_root = find_roots_linear(0f32, 0f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28752,"byte_end":28802,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(zero_root, Roots::One([0f32]));","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28803,"byte_end":28849,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/linear.rs","byte_start":28850,"byte_end":28857,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31506,"byte_end":31526,"line_start":47,"line_end":47,"column_start":8,"column_end":28},"name":"find_roots_quadratic","qualname":"::analytical::quadratic::find_roots_quadratic","value":"pub fn find_roots_quadratic<F: FloatType>(F, F, F) -> Roots<F>","parent":null,"children":[],"decl_id":null,"docs":" Solves a quadratic equation a2*x^2 + a1*x + a0 = 0.","sig":null,"attributes":[{"value":"/ Solves a quadratic equation a2*x^2 + a1*x + a0 = 0.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":30865,"byte_end":30920,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":30921,"byte_end":30924,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In case two roots are present, the first returned root is less than the second one.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":30925,"byte_end":31012,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31013,"byte_end":31016,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31017,"byte_end":31031,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31032,"byte_end":31035,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31036,"byte_end":31043,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use roots::Roots;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31044,"byte_end":31065,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ use roots::find_roots_quadratic;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31066,"byte_end":31102,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31103,"byte_end":31106,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let no_roots = find_roots_quadratic(1f32, 0f32, 1f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31107,"byte_end":31165,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ // Returns Roots::No([]) as 'x^2 + 1 = 0' has no roots","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31166,"byte_end":31224,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31225,"byte_end":31228,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let one_root = find_roots_quadratic(1f64, 0f64, 0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31229,"byte_end":31287,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ // Returns Roots::One([0f64]) as 'x^2 = 0' has one root 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31288,"byte_end":31349,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31350,"byte_end":31353,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let two_roots = find_roots_quadratic(1f32, 0f32, -1f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31354,"byte_end":31414,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/ // Returns Roots::Two([-1f32,1f32]) as 'x^2 - 1 = 0' has roots -1 and 1","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31415,"byte_end":31490,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quadratic.rs","byte_start":31491,"byte_end":31498,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":38323,"byte_end":38341,"line_start":85,"line_end":85,"column_start":8,"column_end":26},"name":"find_roots_quartic","qualname":"::analytical::quartic::find_roots_quartic","value":"pub fn find_roots_quartic<F: FloatType>(F, F, F, F, F) -> Roots<F>","parent":null,"children":[],"decl_id":null,"docs":" Solves a quartic equation a4*x^4 + a3*x^3 + a2*x^2 + a1*x + a0 = 0.","sig":null,"attributes":[{"value":"/ Solves a quartic equation a4*x^4 + a3*x^3 + a2*x^2 + a1*x + a0 = 0.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37345,"byte_end":37416,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37417,"byte_end":37420,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Returned roots are ordered.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37421,"byte_end":37452,"line_start":64,"line_end":64,"column_start":1,"column_end":32}},{"value":"/ Precision is about 5e-15 for f64, 5e-7 for f32.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37453,"byte_end":37504,"line_start":65,"line_end":65,"column_start":1,"column_end":52}},{"value":"/ WARNING: f32 is often not enough to find multiple roots.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37505,"byte_end":37565,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37566,"byte_end":37569,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37570,"byte_end":37584,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37585,"byte_end":37588,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37589,"byte_end":37596,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use roots::find_roots_quartic;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37597,"byte_end":37631,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37632,"byte_end":37635,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let one_root = find_roots_quartic(1f64, 0f64, 0f64, 0f64, 0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37636,"byte_end":37704,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ // Returns Roots::One([0f64]) as 'x^4 = 0' has one root 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37705,"byte_end":37766,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37767,"byte_end":37770,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let two_roots = find_roots_quartic(1f32, 0f32, 0f32, 0f32, -1f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37771,"byte_end":37841,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // Returns Roots::Two([-1f32, 1f32]) as 'x^4 - 1 = 0' has roots -1 and 1","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37842,"byte_end":37918,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ ","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37919,"byte_end":37923,"line_start":78,"line_end":78,"column_start":1,"column_end":5}},{"value":"/ let multiple_roots = find_roots_quartic(-14.0625f64, -3.75f64, 29.75f64, 4.0f64, -16.0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":37924,"byte_end":38019,"line_start":79,"line_end":79,"column_start":1,"column_end":96}},{"value":"/ // Returns Roots::Two([-1.1016116464173349f64, 0.9682783130840016f64])","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":38020,"byte_end":38094,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/ ","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":38095,"byte_end":38099,"line_start":81,"line_end":81,"column_start":1,"column_end":5}},{"value":"/ let multiple_roots_not_found = find_roots_quartic(-14.0625f32, -3.75f32, 29.75f32, 4.0f32, -16.0f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":38100,"byte_end":38205,"line_start":82,"line_end":82,"column_start":1,"column_end":106}},{"value":"/ // Returns Roots::No([]) because of f32 rounding errors when trying to calculate the discriminant","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":38206,"byte_end":38307,"line_start":83,"line_end":83,"column_start":1,"column_end":102}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic.rs","byte_start":38308,"byte_end":38315,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47893,"byte_end":47921,"line_start":43,"line_end":43,"column_start":8,"column_end":36},"name":"find_roots_quartic_depressed","qualname":"::analytical::quartic_depressed::find_roots_quartic_depressed","value":"pub fn find_roots_quartic_depressed<F: FloatType>(F, F, F) -> Roots<F>","parent":null,"children":[],"decl_id":null,"docs":" Solves a depressed quartic equation x^4 + a2*x^2 + a1*x + a0 = 0.","sig":null,"attributes":[{"value":"/ Solves a depressed quartic equation x^4 + a2*x^2 + a1*x + a0 = 0.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47379,"byte_end":47448,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47449,"byte_end":47452,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Returned roots are ordered. Precision is about 1e-14 for f64.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47453,"byte_end":47518,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47519,"byte_end":47522,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47523,"byte_end":47537,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47538,"byte_end":47541,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47542,"byte_end":47549,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use roots::find_roots_quartic_depressed;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47550,"byte_end":47594,"line_start":35,"line_end":35,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47595,"byte_end":47598,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let one_root = find_roots_quartic_depressed(1f64, 0f64, 0f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47599,"byte_end":47665,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ // Returns Roots::One([0f64]) as 'x^4 = 0' has one root 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47666,"byte_end":47727,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47728,"byte_end":47731,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let two_roots = find_roots_quartic_depressed(1f32, 0f32, -1f32);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47732,"byte_end":47800,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ // Returns Roots::Two([-1f32, 1f32]) as 'x^4 - 1 = 0' has roots -1 and 1","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47801,"byte_end":47877,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/quartic_depressed.rs","byte_start":47878,"byte_end":47885,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":495},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52432,"byte_end":52434,"line_start":31,"line_end":31,"column_start":5,"column_end":7},"name":"No","qualname":"::analytical::roots::Roots::No","value":"Roots::No([F; ])","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Equation has no roots\n","sig":null,"attributes":[{"value":"/ Equation has no roots","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52402,"byte_end":52427,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":499},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52522,"byte_end":52525,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"name":"One","qualname":"::analytical::roots::Roots::One","value":"Roots::One([F; ])","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Equation has one root (or all roots of the equation are the same)\n","sig":null,"attributes":[{"value":"/ Equation has one root (or all roots of the equation are the same)","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52448,"byte_end":52517,"line_start":32,"line_end":32,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52570,"byte_end":52573,"line_start":35,"line_end":35,"column_start":5,"column_end":8},"name":"Two","qualname":"::analytical::roots::Roots::Two","value":"Roots::Two([F; ])","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Equation has two roots\n","sig":null,"attributes":[{"value":"/ Equation has two roots","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52539,"byte_end":52565,"line_start":34,"line_end":34,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":507},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52620,"byte_end":52625,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Three","qualname":"::analytical::roots::Roots::Three","value":"Roots::Three([F; ])","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Equation has three roots\n","sig":null,"attributes":[{"value":"/ Equation has three roots","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52587,"byte_end":52615,"line_start":36,"line_end":36,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":511},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52671,"byte_end":52675,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Four","qualname":"::analytical::roots::Roots::Four","value":"Roots::Four([F; ])","parent":{"krate":0,"index":493},"children":[],"decl_id":null,"docs":" Equation has four roots\n","sig":null,"attributes":[{"value":"/ Equation has four roots","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52639,"byte_end":52666,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":493},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52376,"byte_end":52381,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"name":"Roots","qualname":"::analytical::roots::Roots","value":"pub enum Roots<F: FloatType> {\n    No([F; ]),\n    One([F; ]),\n    Two([F; ]),\n    Three([F; ]),\n    Four([F; ]),\n}","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":499},{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":511}],"decl_id":null,"docs":" Sorted and unique list of roots of an equation.\n","sig":null,"attributes":[{"value":"/ Sorted and unique list of roots of an equation.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52287,"byte_end":52338,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":53512,"byte_end":53524,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"add_new_root","qualname":"<Roots<F>>::add_new_root","value":"pub fn add_new_root(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a new root to existing ones keeping the list of roots ordered and unique.\n","sig":null,"attributes":[{"value":"/ Add a new root to existing ones keeping the list of roots ordered and unique.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":53419,"byte_end":53500,"line_start":73,"line_end":73,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57057,"byte_end":57066,"line_start":36,"line_end":36,"column_start":11,"column_end":20},"name":"FloatType","qualname":"::float::FloatType","value":"FloatType: Sized + Copy + Debug + From<i16> + PartialEq + PartialOrd + Neg<Output =\nSelf> + Add<Output = Self> + Sub<Output = Self> + Mul<Output = Self> +\nDiv<Output = Self>","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Generic type that lists functions and constants needed in calculations.\n Default implementations for f32 and f64 are provided.\n","sig":null,"attributes":[{"value":"/ Generic type that lists functions and constants needed in calculations.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":56913,"byte_end":56988,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ Default implementations for f32 and f64 are provided.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":56989,"byte_end":57046,"line_start":35,"line_end":35,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57284,"byte_end":57288,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"zero","qualname":"::float::FloatType::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57307,"byte_end":57310,"line_start":50,"line_end":50,"column_start":8,"column_end":11},"name":"one","qualname":"::float::FloatType::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57329,"byte_end":57338,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"one_third","qualname":"::float::FloatType::one_third","value":"pub fn one_third() -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57357,"byte_end":57359,"line_start":52,"line_end":52,"column_start":8,"column_end":10},"name":"pi","qualname":"::float::FloatType::pi","value":"pub fn pi() -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57378,"byte_end":57390,"line_start":53,"line_end":53,"column_start":8,"column_end":20},"name":"two_third_pi","qualname":"::float::FloatType::two_third_pi","value":"pub fn two_third_pi() -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57409,"byte_end":57413,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::FloatType::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57512,"byte_end":57516,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::FloatType::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" The cubic root function is pow(x, 1/3) accepting negative arguments\n","sig":null,"attributes":[{"value":"/ The cubic root function is pow(x, 1/3) accepting negative arguments","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57433,"byte_end":57504,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57692,"byte_end":57696,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::FloatType::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57719,"byte_end":57723,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::FloatType::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57746,"byte_end":57749,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::FloatType::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57772,"byte_end":57775,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::FloatType::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57798,"byte_end":57801,"line_start":67,"line_end":67,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatType::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57824,"byte_end":57828,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::FloatType::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":61027,"byte_end":61033,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Sample","qualname":"::numerical::Sample","value":"Sample {  }","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527}],"decl_id":null,"docs":" Pair of the independent variable x and the function value y=F(x)\n","sig":null,"attributes":[{"value":"/ Pair of the independent variable x and the function value y=F(x)","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":60919,"byte_end":60987,"line_start":29,"line_end":29,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":61430,"byte_end":61438,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"Interval","qualname":"::numerical::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"decl_id":null,"docs":" Interval between two samples, including these samples\n","sig":null,"attributes":[{"value":"/ Interval between two samples, including these samples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":61333,"byte_end":61390,"line_start":50,"line_end":50,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63204,"byte_end":63217,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"NoConvergency","qualname":"::numerical::SearchError::NoConvergency","value":"SearchError::NoConvergency","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" The algorithm could not converge within the given number of iterations\n","sig":null,"attributes":[{"value":"/ The algorithm could not converge within the given number of iterations","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63125,"byte_end":63199,"line_start":104,"line_end":104,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63266,"byte_end":63278,"line_start":107,"line_end":107,"column_start":5,"column_end":17},"name":"NoBracketing","qualname":"::numerical::SearchError::NoBracketing","value":"SearchError::NoBracketing","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Initial values do not bracket zero\n","sig":null,"attributes":[{"value":"/ Initial values do not bracket zero","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63223,"byte_end":63261,"line_start":106,"line_end":106,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63366,"byte_end":63380,"line_start":109,"line_end":109,"column_start":5,"column_end":19},"name":"ZeroDerivative","qualname":"::numerical::SearchError::ZeroDerivative","value":"SearchError::ZeroDerivative","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" The algorithm cannot continue from the point where the derivative is zero\n","sig":null,"attributes":[{"value":"/ The algorithm cannot continue from the point where the derivative is zero","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63284,"byte_end":63361,"line_start":108,"line_end":108,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":550},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63107,"byte_end":63118,"line_start":103,"line_end":103,"column_start":10,"column_end":21},"name":"SearchError","qualname":"::numerical::SearchError","value":"pub enum SearchError { NoConvergency, NoBracketing, ZeroDerivative, }","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555}],"decl_id":null,"docs":" Possible errors\n","sig":null,"attributes":[{"value":"/ Possible errors","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63050,"byte_end":63069,"line_start":101,"line_end":101,"column_start":1,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64287,"byte_end":64298,"line_start":133,"line_end":133,"column_start":11,"column_end":22},"name":"Convergency","qualname":"::numerical::Convergency","value":"Convergency<F: FloatType>","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":" The way to check if the algorithm has finished by either finding a root\n or reaching the iteration limit.\n","sig":null,"attributes":[{"value":"/ The way to check if the algorithm has finished by either finding a root","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64164,"byte_end":64239,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/ or reaching the iteration limit.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64240,"byte_end":64276,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64391,"byte_end":64404,"line_start":135,"line_end":135,"column_start":8,"column_end":21},"name":"is_root_found","qualname":"::numerical::Convergency::is_root_found","value":"pub fn is_root_found(&mut Self, F) -> bool","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Return true if the given Y value is close enough to the zero\n","sig":null,"attributes":[{"value":"/ Return true if the given Y value is close enough to the zero","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64319,"byte_end":64383,"line_start":134,"line_end":134,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64507,"byte_end":64519,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"is_converged","qualname":"::numerical::Convergency::is_converged","value":"pub fn is_converged(&mut Self, F, F) -> bool","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Return true if given x values are close enough to each other\n","sig":null,"attributes":[{"value":"/ Return true if given x values are close enough to each other","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64435,"byte_end":64499,"line_start":136,"line_end":136,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64611,"byte_end":64637,"line_start":139,"line_end":139,"column_start":8,"column_end":34},"name":"is_iteration_limit_reached","qualname":"::numerical::Convergency::is_iteration_limit_reached","value":"pub fn is_iteration_limit_reached(&mut Self, usize) -> bool","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Return true if no more iterations desired\n","sig":null,"attributes":[{"value":"/ Return true if no more iterations desired","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64558,"byte_end":64603,"line_start":138,"line_end":138,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":199},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70365,"byte_end":70380,"line_start":57,"line_end":57,"column_start":8,"column_end":23},"name":"find_root_brent","qualname":"::numerical::brent::find_root_brent","value":"pub fn find_root_brent<F, Func>(F, F, Func, &mut dyn Convergency<F>)\n-> Result<F, SearchError> where F: FloatType, Func: Fn(F) -> F","parent":null,"children":[],"decl_id":null,"docs":" Find a root of the function f(x) = 0 using the Brent method.","sig":null,"attributes":[{"value":"/ Find a root of the function f(x) = 0 using the Brent method.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69539,"byte_end":69603,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69604,"byte_end":69607,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Pro","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69608,"byte_end":69615,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69616,"byte_end":69619,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ + Fast","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69620,"byte_end":69630,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/ + Robust","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69631,"byte_end":69643,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/ + No need for derivative function","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69644,"byte_end":69681,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69682,"byte_end":69685,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Contra","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69686,"byte_end":69696,"line_start":32,"line_end":32,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69697,"byte_end":69700,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - Complicated","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69701,"byte_end":69718,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ - Needs initial bracketing","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69719,"byte_end":69749,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69750,"byte_end":69753,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Failures","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69754,"byte_end":69768,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/ ## NoBracketing","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69769,"byte_end":69788,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/ Initial values do not bracket the root.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69789,"byte_end":69832,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ ## NoConvergency","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69833,"byte_end":69853,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ Algorithm cannot find a root within the given number of iterations.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69854,"byte_end":69925,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69926,"byte_end":69940,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69941,"byte_end":69944,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69945,"byte_end":69952,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use roots::SimpleConvergency;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69953,"byte_end":69986,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ use roots::find_root_brent;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":69987,"byte_end":70018,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70019,"byte_end":70022,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let f = |x| { 1f64*x*x - 1f64 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70023,"byte_end":70059,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/ let mut convergency = SimpleConvergency { eps:1e-15f64, max_iter:30 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70060,"byte_end":70134,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70135,"byte_end":70138,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let root1 = find_root_brent(10f64, 0f64, &f, &mut convergency);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70139,"byte_end":70206,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ // Returns approximately Ok(1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70207,"byte_end":70242,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70243,"byte_end":70246,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let root2 = find_root_brent(-10f64, 0f64, &f, &mut 1e-15f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70247,"byte_end":70312,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ // Returns approximately Ok(-1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70313,"byte_end":70349,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/brent.rs","byte_start":70350,"byte_end":70357,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":241},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98422,"byte_end":98438,"line_start":668,"line_end":668,"column_start":8,"column_end":24},"name":"find_roots_eigen","qualname":"::numerical::eigen::find_roots_eigen","value":"pub fn find_roots_eigen(Vec<f64>) -> VecDeque<f64>","parent":null,"children":[],"decl_id":null,"docs":" Find all roots of the normalized polynomial by finding eigen numbers of the corresponding matrix.\n (Converted from Java by stiv-yakovenko)","sig":null,"attributes":[{"value":"/ Find all roots of the normalized polynomial by finding eigen numbers of the corresponding matrix.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":97960,"byte_end":98061,"line_start":655,"line_end":655,"column_start":1,"column_end":102}},{"value":"/ (Converted from Java by stiv-yakovenko)","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98062,"byte_end":98105,"line_start":656,"line_end":656,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98106,"byte_end":98109,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ Note that found roots are approximate and not sorted.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98110,"byte_end":98167,"line_start":658,"line_end":658,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98168,"byte_end":98171,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98172,"byte_end":98186,"line_start":660,"line_end":660,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98187,"byte_end":98190,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98191,"byte_end":98198,"line_start":662,"line_end":662,"column_start":1,"column_end":8}},{"value":"/ use roots::find_roots_eigen;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98199,"byte_end":98231,"line_start":663,"line_end":663,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98232,"byte_end":98235,"line_start":664,"line_end":664,"column_start":1,"column_end":4}},{"value":"/ let roots = find_roots_eigen(vec!(0f64, -1f64, 0f64));","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98236,"byte_end":98294,"line_start":665,"line_end":665,"column_start":1,"column_end":59}},{"value":"/ // Returns [0f64, 0.9999999999999999f64, -0.9999999999999999f64] while 'x^3 - x = 0' has roots -1, 0, and 1","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98295,"byte_end":98406,"line_start":666,"line_end":666,"column_start":1,"column_end":112}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":98407,"byte_end":98414,"line_start":667,"line_end":667,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103067,"byte_end":103075,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"Parabola","qualname":"::numerical::inverse_quadratic::Parabola","value":"Parabola {  }","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Definition of the quadratic equation a*x^2 + b*x + c\n","sig":null,"attributes":[{"value":"/ Definition of the quadratic equation a*x^2 + b*x + c","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":102971,"byte_end":103027,"line_start":32,"line_end":32,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":264},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104780,"byte_end":104807,"line_start":93,"line_end":93,"column_start":8,"column_end":35},"name":"find_root_inverse_quadratic","qualname":"::numerical::inverse_quadratic::find_root_inverse_quadratic","value":"pub fn find_root_inverse_quadratic<F,\n                                   Func>(F, F, Func, &mut dyn Convergency<F>)\n-> Result<F, SearchError> where F: FloatType, Func: Fn(F) -> F","parent":null,"children":[],"decl_id":null,"docs":" Find a root of the function f(x) = 0 using inverse quadratic approximation.","sig":null,"attributes":[{"value":"/ Find a root of the function f(x) = 0 using inverse quadratic approximation.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103851,"byte_end":103930,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103931,"byte_end":103934,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Pro","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103935,"byte_end":103942,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103943,"byte_end":103946,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ + Faster than linear approximation","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103947,"byte_end":103985,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/ + No need for derivative function","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103986,"byte_end":104023,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104024,"byte_end":104027,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Contra","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104028,"byte_end":104038,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104039,"byte_end":104042,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ - sqrt is calculated on every step","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104043,"byte_end":104081,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/ - only works for polynomial-like functions","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104082,"byte_end":104128,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104129,"byte_end":104132,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Failures","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104133,"byte_end":104147,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/ ## NoBracketing","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104148,"byte_end":104167,"line_start":74,"line_end":74,"column_start":1,"column_end":20}},{"value":"/ Initial values do not bracket the root.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104168,"byte_end":104211,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ ## NoConvergency","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104212,"byte_end":104232,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/ Algorithm cannot find a root within the given number of iterations.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104233,"byte_end":104304,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104305,"byte_end":104319,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104320,"byte_end":104323,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104324,"byte_end":104331,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ use roots::SimpleConvergency;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104332,"byte_end":104365,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/ use roots::find_root_inverse_quadratic;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104366,"byte_end":104409,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104410,"byte_end":104413,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ let f = |x| { 1f64*x*x - 1f64 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104414,"byte_end":104450,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ let mut convergency = SimpleConvergency { eps:1e-15f64, max_iter:30 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104451,"byte_end":104525,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104526,"byte_end":104529,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let root1 = find_root_inverse_quadratic(10f64, 0f64, &f, &mut convergency);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104530,"byte_end":104609,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ // Returns approximately Ok(1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104610,"byte_end":104645,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104646,"byte_end":104649,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ let root2 = find_root_inverse_quadratic(-10f64, 0f64, &f, &mut 1e-15f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104650,"byte_end":104727,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ // Returns approximately Ok(-1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104728,"byte_end":104764,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":104765,"byte_end":104772,"line_start":92,"line_end":92,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":112164,"byte_end":112188,"line_start":64,"line_end":64,"column_start":8,"column_end":32},"name":"find_root_newton_raphson","qualname":"::numerical::newton_raphson::find_root_newton_raphson","value":"pub fn find_root_newton_raphson<F, Func,\n                                Deriv>(F, Func, Deriv,\n                                       &mut dyn Convergency<F>)\n-> Result<F, SearchError> where F: FloatType, Func: Fn(F) -> F, Deriv: Fn(F)\n-> F","parent":null,"children":[],"decl_id":null,"docs":" Find a root of the function f(x) = 0 using the Newton-Raphson method.","sig":null,"attributes":[{"value":"/ Find a root of the function f(x) = 0 using the Newton-Raphson method.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111045,"byte_end":111118,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111119,"byte_end":111122,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Pro","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111123,"byte_end":111130,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111131,"byte_end":111134,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ + Simple","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111135,"byte_end":111147,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/ + Fast convergency for well-behaved functions","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111148,"byte_end":111197,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ + No need for initial bracketing","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111198,"byte_end":111234,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111235,"byte_end":111238,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Contra","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111239,"byte_end":111249,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111250,"byte_end":111253,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - Needs derivative function","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111254,"byte_end":111285,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ - Impossible to predict which root will be found when many roots exist","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111286,"byte_end":111360,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ - Unstable convergency for non-trivial functions","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111361,"byte_end":111413,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ - Cannot continue when derivative is zero","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111414,"byte_end":111459,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111460,"byte_end":111463,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Failures","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111464,"byte_end":111478,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ ## ZeroDerivative","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111479,"byte_end":111500,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/ The stationary point of the function is encountered. Algorithm cannot continue.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111501,"byte_end":111584,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/ ## NoConvergency","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111585,"byte_end":111605,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/ Algorithm cannot find a root within the given number of iterations.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111606,"byte_end":111677,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111678,"byte_end":111692,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111693,"byte_end":111700,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use roots::SimpleConvergency;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111701,"byte_end":111734,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ use roots::find_root_newton_raphson;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111735,"byte_end":111775,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111776,"byte_end":111779,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let f = |x| { 1f64*x*x - 1f64 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111780,"byte_end":111816,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ let d = |x| { 2f64*x };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111817,"byte_end":111844,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/ let mut convergency = SimpleConvergency { eps:1e-15f64, max_iter:30 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111845,"byte_end":111919,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111920,"byte_end":111923,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let root1 = find_root_newton_raphson(10f64, &f, &d, &mut convergency);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111924,"byte_end":111998,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ // Returns approximately Ok(1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":111999,"byte_end":112034,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":112035,"byte_end":112038,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let root2 = find_root_newton_raphson(-10f64, &f, &d, &mut 1e-15f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":112039,"byte_end":112111,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ // Returns approximately Ok(-1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":112112,"byte_end":112148,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/newton_raphson.rs","byte_start":112149,"byte_end":112156,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":346},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":129060,"byte_end":129076,"line_start":441,"line_end":441,"column_start":8,"column_end":24},"name":"find_roots_sturm","qualname":"::numerical::polynom::find_roots_sturm","value":"pub fn find_roots_sturm<F>(&[F], &mut dyn Convergency<F>)\n-> Vec<Result<F, SearchError>> where F: FloatType","parent":null,"children":[],"decl_id":null,"docs":" Find all roots of the normalized polynomial\n x^n + a[0]*x^(n-1) + a[1]*x^(n-2) + ... + a[n-1] = 0\n using the Sturm's theorem recursively.","sig":null,"attributes":[{"value":"/ Find all roots of the normalized polynomial","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128335,"byte_end":128382,"line_start":418,"line_end":418,"column_start":1,"column_end":48}},{"value":"/ x^n + a[0]*x^(n-1) + a[1]*x^(n-2) + ... + a[n-1] = 0","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128383,"byte_end":128439,"line_start":419,"line_end":419,"column_start":1,"column_end":57}},{"value":"/ using the Sturm's theorem recursively.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128440,"byte_end":128482,"line_start":420,"line_end":420,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128483,"byte_end":128486,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128487,"byte_end":128501,"line_start":422,"line_end":422,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128502,"byte_end":128505,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128506,"byte_end":128513,"line_start":424,"line_end":424,"column_start":1,"column_end":8}},{"value":"/ use roots::find_roots_sturm;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128514,"byte_end":128546,"line_start":425,"line_end":425,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128547,"byte_end":128550,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ let polynom = &[1f64,1f64,1f64,1f64,1f64,1f64];","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128551,"byte_end":128602,"line_start":427,"line_end":427,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128603,"byte_end":128606,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ let roots_or_errors = find_roots_sturm(polynom, &mut 1e-6);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128607,"byte_end":128670,"line_start":429,"line_end":429,"column_start":1,"column_end":64}},{"value":"/ // Returns vector of roots or search errors;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128671,"byte_end":128719,"line_start":430,"line_end":430,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128720,"byte_end":128723,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ let roots: Vec<_> = find_roots_sturm(polynom, &mut 1e-8f64)","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128724,"byte_end":128787,"line_start":432,"line_end":432,"column_start":1,"column_end":64}},{"value":"/             .iter()","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128788,"byte_end":128811,"line_start":433,"line_end":433,"column_start":1,"column_end":24}},{"value":"/             .filter_map(|s| match s {","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128812,"byte_end":128853,"line_start":434,"line_end":434,"column_start":1,"column_end":42}},{"value":"/                 &Ok(ref x) => Some(*x),","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128854,"byte_end":128897,"line_start":435,"line_end":435,"column_start":1,"column_end":44}},{"value":"/                 &Err(_) => None,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128898,"byte_end":128934,"line_start":436,"line_end":436,"column_start":1,"column_end":37}},{"value":"/             })","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128935,"byte_end":128953,"line_start":437,"line_end":437,"column_start":1,"column_end":19}},{"value":"/             .collect();","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128954,"byte_end":128981,"line_start":438,"line_end":438,"column_start":1,"column_end":28}},{"value":"/ // Returns vector of roots filterin out all search errors;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":128982,"byte_end":129044,"line_start":439,"line_end":439,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/polynom.rs","byte_start":129045,"byte_end":129052,"line_start":440,"line_end":440,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":361},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136369,"byte_end":136391,"line_start":73,"line_end":73,"column_start":8,"column_end":30},"name":"find_root_regula_falsi","qualname":"::numerical::regula_falsi::find_root_regula_falsi","value":"pub fn find_root_regula_falsi<F, Func>(F, F, Func, &mut dyn Convergency<F>)\n-> Result<F, SearchError> where F: FloatType, Func: Fn(F) -> F","parent":null,"children":[],"decl_id":null,"docs":" Find a root of the function f(x) = 0 using the Illinois modification of the regula falsi method.","sig":null,"attributes":[{"value":"/ Find a root of the function f(x) = 0 using the Illinois modification of the regula falsi method.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135491,"byte_end":135591,"line_start":40,"line_end":40,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135592,"byte_end":135595,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Pro","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135596,"byte_end":135603,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135604,"byte_end":135607,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ + Simple","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135608,"byte_end":135620,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ + Robust","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135621,"byte_end":135633,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/ + No need for derivative function","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135634,"byte_end":135671,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135672,"byte_end":135675,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Contra","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135676,"byte_end":135686,"line_start":48,"line_end":48,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135687,"byte_end":135690,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - Slow","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135691,"byte_end":135701,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/ - Needs initial bracketing","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135702,"byte_end":135732,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135733,"byte_end":135736,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Failures","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135737,"byte_end":135751,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ## NoBracketing","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135752,"byte_end":135771,"line_start":54,"line_end":54,"column_start":1,"column_end":20}},{"value":"/ Initial values do not bracket the root.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135772,"byte_end":135815,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/ ## NoConvergency","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135816,"byte_end":135836,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/ Algorithm cannot find a root within the given number of iterations.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135837,"byte_end":135908,"line_start":57,"line_end":57,"column_start":1,"column_end":72}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135909,"byte_end":135923,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135924,"byte_end":135927,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135928,"byte_end":135935,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ use roots::SimpleConvergency;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135936,"byte_end":135969,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ use roots::find_root_regula_falsi;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":135970,"byte_end":136008,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136009,"byte_end":136012,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let f = |x| { 1f64*x*x - 1f64 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136013,"byte_end":136049,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/ let mut convergency = SimpleConvergency { eps:1e-15f64, max_iter:30 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136050,"byte_end":136124,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136125,"byte_end":136128,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let root1 = find_root_regula_falsi(10f64, 0f64, &f, &mut convergency);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136129,"byte_end":136203,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ // Returns approximately Ok(1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136204,"byte_end":136239,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136240,"byte_end":136243,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let root2 = find_root_regula_falsi(-10f64, 0f64, &f, &mut 1e-15f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136244,"byte_end":136316,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/ // Returns approximately Ok(-1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136317,"byte_end":136353,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/regula_falsi.rs","byte_start":136354,"byte_end":136361,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":374},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141481,"byte_end":141497,"line_start":63,"line_end":63,"column_start":8,"column_end":24},"name":"find_root_secant","qualname":"::numerical::secant::find_root_secant","value":"pub fn find_root_secant<F, Func>(F, F, Func, &mut dyn Convergency<F>)\n-> Result<F, SearchError> where F: FloatType, Func: Fn(F) -> F","parent":null,"children":[],"decl_id":null,"docs":" Find a root of the function f(x) = 0 using the secant method.","sig":null,"attributes":[{"value":"/ Find a root of the function f(x) = 0 using the secant method.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140439,"byte_end":140504,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140505,"byte_end":140508,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Pro","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140509,"byte_end":140516,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140517,"byte_end":140520,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ + Simple","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140521,"byte_end":140533,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/ + No need for initial bracketing","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140534,"byte_end":140570,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/ + No need for derivative function","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140571,"byte_end":140608,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140609,"byte_end":140612,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Contra","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140613,"byte_end":140623,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140624,"byte_end":140627,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - Impossible to predict which root will be found when many roots exist","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140628,"byte_end":140702,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ - Unstable convergency for non-trivial functions","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140703,"byte_end":140755,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ - Cannot continue when two consecutive iterations have the same value","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140756,"byte_end":140829,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140830,"byte_end":140833,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Failures","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140834,"byte_end":140848,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/ ## ZeroDerivative","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140849,"byte_end":140870,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ Two consecutive points have the same value. Algorithm cannot continue.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140871,"byte_end":140945,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ ## NoConvergency","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140946,"byte_end":140966,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/ Algorithm cannot find a root within the given number of iterations.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":140967,"byte_end":141038,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141039,"byte_end":141053,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141054,"byte_end":141057,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141058,"byte_end":141065,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use roots::SimpleConvergency;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141066,"byte_end":141099,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ use roots::find_root_secant;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141100,"byte_end":141132,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141133,"byte_end":141136,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let f = |x| { 1f64*x*x - 1f64 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141137,"byte_end":141173,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ let mut convergency = SimpleConvergency { eps:1e-15f64, max_iter:30 };","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141174,"byte_end":141248,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141249,"byte_end":141252,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let root1 = find_root_secant(10f64, 0f64, &f, &mut convergency);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141253,"byte_end":141321,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // Returns approximately Ok(1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141322,"byte_end":141357,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141358,"byte_end":141361,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let root2 = find_root_secant(-10f64, 0f64, &f, &mut 1e-15f64);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141362,"byte_end":141428,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ // Returns approximately Ok(-1);","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141429,"byte_end":141465,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/secant.rs","byte_start":141466,"byte_end":141473,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":144841,"byte_end":144857,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"DebugConvergency","qualname":"::numerical::debug_convergency::DebugConvergency","value":"DebugConvergency {  }","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"decl_id":null,"docs":" Convergency provider for debugging.\n It will print out the error at each iteration.\n","sig":null,"attributes":[{"value":"/ Convergency provider for debugging.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":144739,"byte_end":144778,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/ It will print out the error at each iteration.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":144779,"byte_end":144829,"line_start":31,"line_end":31,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":145079,"byte_end":145082,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugConvergency<F>>::new","value":"pub fn new(F, usize) -> DebugConvergency<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":145263,"byte_end":145268,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"reset","qualname":"<DebugConvergency<F>>::reset","value":"pub fn reset(&mut DebugConvergency<F>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":145344,"byte_end":145358,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"get_iter_count","qualname":"<DebugConvergency<F>>::get_iter_count","value":"pub fn get_iter_count(&DebugConvergency<F>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147735,"byte_end":147752,"line_start":30,"line_end":30,"column_start":12,"column_end":29},"name":"SimpleConvergency","qualname":"::numerical::simple_convergency::SimpleConvergency","value":"SimpleConvergency { eps, max_iter }","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"decl_id":null,"docs":" A very basic convergency rules that must be sufficient for many cases.\n The absolute precision is the same for x and y axes, no relative precision.\n","sig":null,"attributes":[{"value":"/ A very basic convergency rules that must be sufficient for many cases.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147569,"byte_end":147643,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ The absolute precision is the same for x and y axes, no relative precision.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147644,"byte_end":147723,"line_start":29,"line_end":29,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":414},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147817,"byte_end":147820,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"eps","qualname":"::numerical::simple_convergency::SimpleConvergency::eps","value":"F","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" Precision for both X and Y axes\n","sig":null,"attributes":[{"value":"/ Precision for both X and Y axes","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147773,"byte_end":147808,"line_start":31,"line_end":31,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":415},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147870,"byte_end":147878,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"max_iter","qualname":"::numerical::simple_convergency::SimpleConvergency::max_iter","value":"usize","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" Maximum number of iterations\n","sig":null,"attributes":[{"value":"/ Maximum number of iterations","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147829,"byte_end":147861,"line_start":33,"line_end":33,"column_start":5,"column_end":37}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52722,"byte_end":52727,"line_start":42,"line_end":42,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":53010,"byte_end":53015,"line_start":54,"line_end":54,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":61194,"byte_end":61200,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":61562,"byte_end":61570,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63407,"byte_end":63418,"line_start":112,"line_end":112,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63759,"byte_end":63770,"line_start":121,"line_end":121,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64712,"byte_end":64713,"line_start":142,"line_end":142,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":74810,"byte_end":74816,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":74992,"byte_end":74998,"line_start":38,"line_end":38,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":75326,"byte_end":75332,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":75488,"byte_end":75494,"line_start":56,"line_end":56,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103146,"byte_end":103154,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":145046,"byte_end":145062,"line_start":41,"line_end":41,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":145484,"byte_end":145500,"line_start":59,"line_end":59,"column_start":60,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147928,"byte_end":147945,"line_start":37,"line_end":37,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":52722,"byte_end":52727,"line_start":42,"line_end":42,"column_start":35,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":2729}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/analytical/roots.rs","byte_start":53010,"byte_end":53015,"line_start":54,"line_end":54,"column_start":20,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57072,"byte_end":57077,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57084,"byte_end":57088,"line_start":38,"line_end":38,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2842},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57095,"byte_end":57100,"line_start":39,"line_end":39,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":8805},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57107,"byte_end":57111,"line_start":40,"line_end":40,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2738},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57123,"byte_end":57132,"line_start":41,"line_end":41,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2487},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57139,"byte_end":57149,"line_start":42,"line_end":42,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":2530},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57156,"byte_end":57159,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2926},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57181,"byte_end":57184,"line_start":44,"line_end":44,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2899},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57206,"byte_end":57209,"line_start":45,"line_end":45,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2904},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57231,"byte_end":57234,"line_start":46,"line_end":46,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2909},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/float.rs","byte_start":57256,"byte_end":57259,"line_start":47,"line_end":47,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2914},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":61194,"byte_end":61200,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":61562,"byte_end":61570,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63407,"byte_end":63418,"line_start":112,"line_end":112,"column_start":23,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":550},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":63759,"byte_end":63770,"line_start":121,"line_end":121,"column_start":16,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":550},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/mod.rs","byte_start":64712,"byte_end":64713,"line_start":142,"line_end":142,"column_start":39,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":183},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":74810,"byte_end":74816,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":74992,"byte_end":74998,"line_start":38,"line_end":38,"column_start":21,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":75326,"byte_end":75332,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/eigen.rs","byte_start":75488,"byte_end":75494,"line_start":56,"line_end":56,"column_start":31,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":3143}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/inverse_quadratic.rs","byte_start":103146,"byte_end":103154,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":145046,"byte_end":145062,"line_start":41,"line_end":41,"column_start":20,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/debug_convergency.rs","byte_start":145484,"byte_end":145500,"line_start":59,"line_end":59,"column_start":60,"column_end":76},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":177}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/roots-0.0.7/src/numerical/simple_convergency.rs","byte_start":147928,"byte_end":147945,"line_start":37,"line_end":37,"column_start":39,"column_end":56},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":412},"to":{"krate":0,"index":177}}]}