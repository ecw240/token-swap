{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14","program":"/Users/loan/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=cc1f27a4fb9525cf","-C","extra-filename=-cc1f27a4fb9525cf","--out-dir","/Users/loan/solana-program-library/token-swap/program/target/rls/debug/deps","-L","dependency=/Users/loan/solana-program-library/token-swap/program/target/rls/debug/deps","--extern","futures_core=/Users/loan/solana-program-library/token-swap/program/target/rls/debug/deps/libfutures_core-09f75170c5a47980.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/loan/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/loan/solana-program-library/token-swap/program/target/rls/debug/deps/libfutures_channel-cc1f27a4fb9525cf.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[5913356626954283765,4175137469339851920]},"crate_root":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src","external_crates":[{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}},{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","num":17,"id":{"name":"futures_core","disambiguator":[13376430517313943532,16638920259293565585]}}],"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":44},{"krate":0,"index":311}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":687,"byte_end":775,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":943,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":427},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":430},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":139},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":502},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":189},{"krate":0,"index":204},{"krate":0,"index":221},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":1569,"byte_end":1592,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10863850,"byte_end":10863919,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10863920,"byte_end":10863943,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10863944,"byte_end":10863947,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10863948,"byte_end":10864018,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864019,"byte_end":10864098,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864099,"byte_end":10864174,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864175,"byte_end":10864247,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864248,"byte_end":10864330,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864331,"byte_end":10864408,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864409,"byte_end":10864486,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864487,"byte_end":10864532,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864533,"byte_end":10864536,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864537,"byte_end":10864613,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864614,"byte_end":10864617,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864618,"byte_end":10864637,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864638,"byte_end":10864641,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864642,"byte_end":10864708,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864709,"byte_end":10864789,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864790,"byte_end":10864847,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864848,"byte_end":10864882,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864883,"byte_end":10864886,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864887,"byte_end":10864957,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10864958,"byte_end":10865037,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865038,"byte_end":10865061,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865062,"byte_end":10865065,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865066,"byte_end":10865086,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865087,"byte_end":10865090,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865091,"byte_end":10865157,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865158,"byte_end":10865234,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865235,"byte_end":10865315,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865316,"byte_end":10865396,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865397,"byte_end":10865469,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865470,"byte_end":10865529,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865530,"byte_end":10865533,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865534,"byte_end":10865568,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865569,"byte_end":10865607,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865608,"byte_end":10865667,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865668,"byte_end":10865696,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10865697,"byte_end":10865767,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":430},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869158,"byte_end":10869164,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869010,"byte_end":10869061,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869062,"byte_end":10869065,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869066,"byte_end":10869129,"line_start":124,"line_end":124,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869356,"byte_end":10869371,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869201,"byte_end":10869255,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869256,"byte_end":10869259,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869260,"byte_end":10869327,"line_start":130,"line_end":130,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869643,"byte_end":10869651,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":446}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869498,"byte_end":10869546,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869547,"byte_end":10869550,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869551,"byte_end":10869614,"line_start":139,"line_end":139,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":450},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869853,"byte_end":10869870,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":452}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869701,"byte_end":10869752,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869753,"byte_end":10869756,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869757,"byte_end":10869824,"line_start":147,"line_end":147,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":456},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870147,"byte_end":10870156,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":457}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870037,"byte_end":10870096,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870295,"byte_end":10870307,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870187,"byte_end":10870251,"line_start":162,"line_end":162,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870517,"byte_end":10870529,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870439,"byte_end":10870505,"line_start":175,"line_end":175,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870979,"byte_end":10870986,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870896,"byte_end":10870967,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871203,"byte_end":10871218,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871116,"byte_end":10871191,"line_start":201,"line_end":201,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872043,"byte_end":10872050,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871960,"byte_end":10872031,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872193,"byte_end":10872208,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872106,"byte_end":10872181,"line_start":236,"line_end":236,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872349,"byte_end":10872359,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872272,"byte_end":10872337,"line_start":241,"line_end":241,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872467,"byte_end":10872482,"line_start":247,"line_end":247,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872401,"byte_end":10872455,"line_start":246,"line_end":246,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875887,"byte_end":10875894,"line_start":364,"line_end":364,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875261,"byte_end":10875341,"line_start":353,"line_end":353,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875342,"byte_end":10875345,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875346,"byte_end":10875425,"line_start":355,"line_end":355,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875426,"byte_end":10875503,"line_start":356,"line_end":356,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875504,"byte_end":10875575,"line_start":357,"line_end":357,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875576,"byte_end":10875649,"line_start":358,"line_end":358,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875650,"byte_end":10875720,"line_start":359,"line_end":359,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875721,"byte_end":10875724,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875725,"byte_end":10875779,"line_start":361,"line_end":361,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875780,"byte_end":10875867,"line_start":362,"line_end":362,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10875868,"byte_end":10875879,"line_start":363,"line_end":363,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10877158,"byte_end":10877167,"line_start":401,"line_end":401,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876646,"byte_end":10876722,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876723,"byte_end":10876733,"line_start":392,"line_end":392,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876734,"byte_end":10876737,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876738,"byte_end":10876818,"line_start":394,"line_end":394,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876819,"byte_end":10876898,"line_start":395,"line_end":395,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876899,"byte_end":10876912,"line_start":396,"line_end":396,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876913,"byte_end":10876916,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876917,"byte_end":10876996,"line_start":398,"line_end":398,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10876997,"byte_end":10877073,"line_start":399,"line_end":399,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10877074,"byte_end":10877150,"line_start":400,"line_end":400,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10887937,"byte_end":10887945,"line_start":723,"line_end":723,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10887824,"byte_end":10887894,"line_start":721,"line_end":721,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10887899,"byte_end":10887925,"line_start":722,"line_end":722,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888506,"byte_end":10888516,"line_start":741,"line_end":741,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888290,"byte_end":10888324,"line_start":736,"line_end":736,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888329,"byte_end":10888332,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888337,"byte_end":10888382,"line_start":738,"line_end":738,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888387,"byte_end":10888458,"line_start":739,"line_end":739,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888463,"byte_end":10888494,"line_start":740,"line_end":740,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889144,"byte_end":10889154,"line_start":758,"line_end":758,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888633,"byte_end":10888707,"line_start":746,"line_end":746,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888712,"byte_end":10888750,"line_start":747,"line_end":747,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888755,"byte_end":10888758,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888763,"byte_end":10888781,"line_start":749,"line_end":749,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888786,"byte_end":10888789,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888794,"byte_end":10888818,"line_start":751,"line_end":751,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888823,"byte_end":10888826,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888831,"byte_end":10888890,"line_start":753,"line_end":753,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888895,"byte_end":10888944,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10888949,"byte_end":10889025,"line_start":755,"line_end":755,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889030,"byte_end":10889058,"line_start":756,"line_end":756,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889063,"byte_end":10889132,"line_start":757,"line_end":757,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889479,"byte_end":10889488,"line_start":769,"line_end":769,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889398,"byte_end":10889467,"line_start":768,"line_end":768,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889678,"byte_end":10889691,"line_start":774,"line_end":774,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889592,"byte_end":10889666,"line_start":773,"line_end":773,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889907,"byte_end":10889917,"line_start":781,"line_end":781,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889804,"byte_end":10889895,"line_start":780,"line_end":780,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890035,"byte_end":10890048,"line_start":786,"line_end":786,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10889965,"byte_end":10890023,"line_start":785,"line_end":785,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890296,"byte_end":10890311,"line_start":794,"line_end":794,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890231,"byte_end":10890284,"line_start":793,"line_end":793,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890579,"byte_end":10890592,"line_start":802,"line_end":802,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890519,"byte_end":10890567,"line_start":801,"line_end":801,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890873,"byte_end":10890883,"line_start":812,"line_end":812,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890806,"byte_end":10890861,"line_start":811,"line_end":811,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10891204,"byte_end":10891213,"line_start":823,"line_end":823,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10891123,"byte_end":10891192,"line_start":822,"line_end":822,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10891405,"byte_end":10891418,"line_start":828,"line_end":828,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10891319,"byte_end":10891393,"line_start":827,"line_end":827,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10891626,"byte_end":10891636,"line_start":835,"line_end":835,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10891523,"byte_end":10891614,"line_start":834,"line_end":834,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892353,"byte_end":10892363,"line_start":860,"line_end":860,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892158,"byte_end":10892192,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892197,"byte_end":10892200,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892205,"byte_end":10892278,"line_start":858,"line_end":858,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892283,"byte_end":10892341,"line_start":859,"line_end":859,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892728,"byte_end":10892742,"line_start":870,"line_end":870,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892482,"byte_end":10892521,"line_start":865,"line_end":865,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892526,"byte_end":10892529,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892534,"byte_end":10892609,"line_start":867,"line_end":867,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892614,"byte_end":10892690,"line_start":868,"line_end":868,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892695,"byte_end":10892716,"line_start":869,"line_end":869,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892901,"byte_end":10892914,"line_start":875,"line_end":875,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10892831,"byte_end":10892889,"line_start":874,"line_end":874,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893162,"byte_end":10893177,"line_start":883,"line_end":883,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893097,"byte_end":10893150,"line_start":882,"line_end":882,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893454,"byte_end":10893467,"line_start":891,"line_end":891,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893394,"byte_end":10893442,"line_start":890,"line_end":890,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897078,"byte_end":10897083,"line_start":1006,"line_end":1006,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896841,"byte_end":10896905,"line_start":1002,"line_end":1002,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896910,"byte_end":10896913,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896918,"byte_end":10896993,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896998,"byte_end":10897066,"line_start":1005,"line_end":1005,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10898006,"byte_end":10898014,"line_start":1028,"line_end":1028,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897478,"byte_end":10897553,"line_start":1018,"line_end":1018,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897558,"byte_end":10897561,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897566,"byte_end":10897638,"line_start":1020,"line_end":1020,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897643,"byte_end":10897717,"line_start":1021,"line_end":1021,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897722,"byte_end":10897742,"line_start":1022,"line_end":1022,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897747,"byte_end":10897750,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897755,"byte_end":10897781,"line_start":1024,"line_end":1024,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897786,"byte_end":10897829,"line_start":1025,"line_end":1025,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897834,"byte_end":10897907,"line_start":1026,"line_end":1026,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10897912,"byte_end":10897994,"line_start":1027,"line_end":1027,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10902943,"byte_end":10902948,"line_start":1165,"line_end":1165,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10902706,"byte_end":10902770,"line_start":1161,"line_end":1161,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10902775,"byte_end":10902778,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10902783,"byte_end":10902858,"line_start":1163,"line_end":1163,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10902863,"byte_end":10902931,"line_start":1164,"line_end":1164,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903590,"byte_end":10903598,"line_start":1181,"line_end":1181,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903062,"byte_end":10903137,"line_start":1171,"line_end":1171,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903142,"byte_end":10903145,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903150,"byte_end":10903222,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903227,"byte_end":10903301,"line_start":1174,"line_end":1174,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903306,"byte_end":10903326,"line_start":1175,"line_end":1175,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903331,"byte_end":10903334,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903339,"byte_end":10903365,"line_start":1177,"line_end":1177,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903370,"byte_end":10903413,"line_start":1178,"line_end":1178,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903418,"byte_end":10903491,"line_start":1179,"line_end":1179,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10903496,"byte_end":10903578,"line_start":1180,"line_end":1180,"column_start":5,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":311},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":547},{"krate":0,"index":553},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":364},{"krate":0,"index":371},{"krate":0,"index":556},{"krate":0,"index":560},{"krate":0,"index":374},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":392}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":1615,"byte_end":1640,"line_start":42,"line_end":42,"column_start":5,"column_end":30}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10915977,"byte_end":10916047,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916048,"byte_end":10916051,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916052,"byte_end":10916107,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916601,"byte_end":10916609,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":537}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916366,"byte_end":10916442,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916443,"byte_end":10916446,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916447,"byte_end":10916504,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916505,"byte_end":10916572,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916794,"byte_end":10916800,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":543}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916644,"byte_end":10916703,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916704,"byte_end":10916707,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916708,"byte_end":10916765,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919904,"byte_end":10919911,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10918705,"byte_end":10918793,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10918794,"byte_end":10918797,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10918798,"byte_end":10918873,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10918874,"byte_end":10918877,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10918878,"byte_end":10918958,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10918959,"byte_end":10919037,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919038,"byte_end":10919115,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919116,"byte_end":10919194,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919195,"byte_end":10919243,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919244,"byte_end":10919247,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919248,"byte_end":10919308,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919309,"byte_end":10919312,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919313,"byte_end":10919327,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919328,"byte_end":10919331,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919332,"byte_end":10919339,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919340,"byte_end":10919374,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919375,"byte_end":10919413,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919414,"byte_end":10919417,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919418,"byte_end":10919473,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919474,"byte_end":10919477,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919478,"byte_end":10919500,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919501,"byte_end":10919545,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919546,"byte_end":10919597,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919598,"byte_end":10919646,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919647,"byte_end":10919679,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919680,"byte_end":10919687,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919688,"byte_end":10919691,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919692,"byte_end":10919738,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919739,"byte_end":10919742,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919743,"byte_end":10919782,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919783,"byte_end":10919828,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919829,"byte_end":10919880,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919881,"byte_end":10919888,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10919889,"byte_end":10919896,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929174,"byte_end":10929178,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928681,"byte_end":10928733,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928738,"byte_end":10928741,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928746,"byte_end":10928818,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928823,"byte_end":10928895,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928900,"byte_end":10928932,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928937,"byte_end":10928940,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928945,"byte_end":10929017,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929022,"byte_end":10929092,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929097,"byte_end":10929162,"line_start":344,"line_end":344,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929830,"byte_end":10929843,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929248,"byte_end":10929309,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929314,"byte_end":10929358,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929363,"byte_end":10929366,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929371,"byte_end":10929390,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929395,"byte_end":10929398,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929403,"byte_end":10929473,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929478,"byte_end":10929552,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929557,"byte_end":10929560,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929565,"byte_end":10929633,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929638,"byte_end":10929711,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929716,"byte_end":10929788,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929793,"byte_end":10929818,"line_start":360,"line_end":360,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930207,"byte_end":10930219,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10929939,"byte_end":10930008,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930013,"byte_end":10930057,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930062,"byte_end":10930065,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930070,"byte_end":10930141,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930146,"byte_end":10930195,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930643,"byte_end":10930654,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930304,"byte_end":10930369,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930374,"byte_end":10930395,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930400,"byte_end":10930403,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930408,"byte_end":10930483,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930488,"byte_end":10930559,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930564,"byte_end":10930631,"line_start":379,"line_end":379,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930878,"byte_end":10930893,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930716,"byte_end":10930809,"line_start":384,"line_end":384,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10930814,"byte_end":10930866,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":556},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931354,"byte_end":10931366,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":559}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931086,"byte_end":10931161,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931162,"byte_end":10931165,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931166,"byte_end":10931257,"line_start":399,"line_end":399,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931258,"byte_end":10931325,"line_start":400,"line_end":400,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931756,"byte_end":10931764,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931593,"byte_end":10931664,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931665,"byte_end":10931699,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932372,"byte_end":10932377,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932000,"byte_end":10932073,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932078,"byte_end":10932093,"line_start":430,"line_end":430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932098,"byte_end":10932101,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932106,"byte_end":10932173,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932178,"byte_end":10932240,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932245,"byte_end":10932318,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932323,"byte_end":10932360,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932808,"byte_end":10932816,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932432,"byte_end":10932499,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932504,"byte_end":10932507,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932512,"byte_end":10932579,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932584,"byte_end":10932587,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932592,"byte_end":10932665,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932670,"byte_end":10932736,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932741,"byte_end":10932744,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932749,"byte_end":10932796,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10861861,"byte_end":10861865,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10861902,"byte_end":10861906,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10861922,"byte_end":10861926,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10862764,"byte_end":10862771,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10863024,"byte_end":10863031,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10863394,"byte_end":10863401,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10912514,"byte_end":10912519,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10912557,"byte_end":10912562,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10912579,"byte_end":10912583,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10912776,"byte_end":10912781,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10915678,"byte_end":10915683,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10868939,"byte_end":10868959,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10868984,"byte_end":10869002,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869473,"byte_end":10869488,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870012,"byte_end":10870029,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870572,"byte_end":10870581,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870861,"byte_end":10870870,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870880,"byte_end":10870889,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871377,"byte_end":10871389,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871596,"byte_end":10871608,"line_start":218,"line_end":218,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871910,"byte_end":10871922,"line_start":228,"line_end":228,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871938,"byte_end":10871950,"line_start":230,"line_end":230,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872550,"byte_end":10872562,"line_start":252,"line_end":252,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872719,"byte_end":10872731,"line_start":259,"line_end":259,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872880,"byte_end":10872892,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10874988,"byte_end":10874998,"line_start":336,"line_end":336,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10877667,"byte_end":10877687,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10880545,"byte_end":10880563,"line_start":513,"line_end":513,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10887808,"byte_end":10887814,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890781,"byte_end":10890796,"line_start":810,"line_end":810,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893666,"byte_end":10893672,"line_start":899,"line_end":899,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893764,"byte_end":10893779,"line_start":905,"line_end":905,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893871,"byte_end":10893891,"line_start":911,"line_end":911,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10894992,"byte_end":10895010,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896261,"byte_end":10896281,"line_start":973,"line_end":973,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896526,"byte_end":10896544,"line_start":984,"line_end":984,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896823,"byte_end":10896831,"line_start":1001,"line_end":1001,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10900488,"byte_end":10900496,"line_start":1095,"line_end":1095,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10900528,"byte_end":10900536,"line_start":1097,"line_end":1097,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10900637,"byte_end":10900645,"line_start":1103,"line_end":1103,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10901525,"byte_end":10901533,"line_start":1130,"line_end":1130,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10902679,"byte_end":10902696,"line_start":1160,"line_end":1160,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10905557,"byte_end":10905574,"line_start":1234,"line_end":1234,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10905675,"byte_end":10905692,"line_start":1240,"line_end":1240,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10906568,"byte_end":10906585,"line_start":1267,"line_end":1267,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10907771,"byte_end":10907785,"line_start":1303,"line_end":1303,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908068,"byte_end":10908080,"line_start":1315,"line_end":1315,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908606,"byte_end":10908620,"line_start":1333,"line_end":1333,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908657,"byte_end":10908671,"line_start":1334,"line_end":1334,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908709,"byte_end":10908721,"line_start":1336,"line_end":1336,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908758,"byte_end":10908770,"line_start":1337,"line_end":1337,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908783,"byte_end":10908788,"line_start":1339,"line_end":1339,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916908,"byte_end":10916916,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916941,"byte_end":10916947,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10920136,"byte_end":10920141,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928665,"byte_end":10928671,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931011,"byte_end":10931017,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931428,"byte_end":10931440,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931789,"byte_end":10931797,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931961,"byte_end":10931969,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931982,"byte_end":10931990,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932919,"byte_end":10932927,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10933144,"byte_end":10933152,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10933493,"byte_end":10933501,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":1605,"byte_end":1609,"line_start":41,"line_end":41,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lib.rs","byte_start":1653,"byte_end":1660,"line_start":43,"line_end":43,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":311}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10861861,"byte_end":10861865,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10861902,"byte_end":10861906,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2844}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10861922,"byte_end":10861926,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10862764,"byte_end":10862771,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3054}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10863024,"byte_end":10863031,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/lock.rs","byte_start":10863394,"byte_end":10863401,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10912514,"byte_end":10912519,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10912557,"byte_end":10912562,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":2844}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10912579,"byte_end":10912583,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10912776,"byte_end":10912781,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/queue.rs","byte_start":10915678,"byte_end":10915683,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10868939,"byte_end":10868959,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2873}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10868984,"byte_end":10869002,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2873}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869429,"byte_end":10869433,"line_start":134,"line_end":134,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2832},"to":{"krate":0,"index":137}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869436,"byte_end":10869440,"line_start":134,"line_end":134,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2844},"to":{"krate":0,"index":137}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869443,"byte_end":10869448,"line_start":134,"line_end":134,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2457},"to":{"krate":0,"index":137}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10869473,"byte_end":10869488,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":437},"to":{"krate":0,"index":137}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870012,"byte_end":10870029,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2873}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870572,"byte_end":10870581,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870861,"byte_end":10870870,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":456},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10870880,"byte_end":10870889,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871377,"byte_end":10871389,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871596,"byte_end":10871608,"line_start":218,"line_end":218,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871910,"byte_end":10871922,"line_start":228,"line_end":228,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10871938,"byte_end":10871950,"line_start":230,"line_end":230,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872550,"byte_end":10872562,"line_start":252,"line_end":252,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":141},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872719,"byte_end":10872731,"line_start":259,"line_end":259,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":141},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10872880,"byte_end":10872892,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":141},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10874988,"byte_end":10874998,"line_start":336,"line_end":336,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10877667,"byte_end":10877687,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10880545,"byte_end":10880563,"line_start":513,"line_end":513,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10887808,"byte_end":10887814,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10890781,"byte_end":10890796,"line_start":810,"line_end":810,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893666,"byte_end":10893672,"line_start":899,"line_end":899,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893764,"byte_end":10893779,"line_start":905,"line_end":905,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10893871,"byte_end":10893891,"line_start":911,"line_end":911,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10894992,"byte_end":10895010,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896261,"byte_end":10896281,"line_start":973,"line_end":973,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896526,"byte_end":10896544,"line_start":984,"line_end":984,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10896823,"byte_end":10896831,"line_start":1001,"line_end":1001,"column_start":9,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10900488,"byte_end":10900496,"line_start":1095,"line_end":1095,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2873}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10900528,"byte_end":10900536,"line_start":1097,"line_end":1097,"column_start":25,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":444},"to":{"krate":17,"index":110}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10900637,"byte_end":10900645,"line_start":1103,"line_end":1103,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":444},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10901525,"byte_end":10901533,"line_start":1130,"line_end":1130,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10902679,"byte_end":10902696,"line_start":1160,"line_end":1160,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10905557,"byte_end":10905574,"line_start":1234,"line_end":1234,"column_start":25,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":450},"to":{"krate":17,"index":110}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10905675,"byte_end":10905692,"line_start":1240,"line_end":1240,"column_start":20,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":450},"to":{"krate":17,"index":96}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10906568,"byte_end":10906585,"line_start":1267,"line_end":1267,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10907771,"byte_end":10907785,"line_start":1303,"line_end":1303,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908068,"byte_end":10908080,"line_start":1315,"line_end":1315,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908606,"byte_end":10908620,"line_start":1333,"line_end":1333,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908657,"byte_end":10908671,"line_start":1334,"line_end":1334,"column_start":31,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2844}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908709,"byte_end":10908721,"line_start":1336,"line_end":1336,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908758,"byte_end":10908770,"line_start":1337,"line_end":1337,"column_start":31,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":2844}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/mpsc/mod.rs","byte_start":10908783,"byte_end":10908788,"line_start":1339,"line_end":1339,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916908,"byte_end":10916916,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":2873}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10916941,"byte_end":10916947,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":2873}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10920136,"byte_end":10920141,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10928665,"byte_end":10928671,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931011,"byte_end":10931017,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931428,"byte_end":10931440,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":12019}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931789,"byte_end":10931797,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931961,"byte_end":10931969,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":564},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10931982,"byte_end":10931990,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10932919,"byte_end":10932927,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":12019}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10933144,"byte_end":10933152,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":535},"to":{"krate":17,"index":27}},{"span":{"file_name":"/Users/loan/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.14/src/oneshot.rs","byte_start":10933493,"byte_end":10933501,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":3078}}]}